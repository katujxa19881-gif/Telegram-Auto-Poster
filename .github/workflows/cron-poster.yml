name: Telegram Auto Poster

on:
  schedule:
    - cron: "*/5 * * * *"   # запуск каждые 5 минут
  workflow_dispatch:         # возможность запустить вручную

concurrency:
  group: telegram-auto-poster
  cancel-in-progress: true

permissions:
  contents: write            # нужно, чтобы закоммитить sent.json

jobs:
  post:
    runs-on: ubuntu-latest
    env:
      # === обязательные секреты ===
      BOT_TOKEN:      ${{ secrets.BOT_TOKEN }}
      CHANNEL_ID:     ${{ secrets.CHANNEL_ID }}
      OWNER_ID:       ${{ secrets.OWNER_ID }}
      # === время и окно догонялки ===
      TZ:             ${{ secrets.TZ }}                 # напр. Europe/Kaliningrad
      WINDOW_MINUTES: ${{ secrets.WINDOW_MINUTES }}     # напр. 30
      # === проверка «живости» бота на Replit и внешние ссылки ===
      KEEPALIVE_URL:  ${{ secrets.KEEPALIVE_URL }}      # https://...replit.dev/ron?token=...
      LINK_SKILLS:    ${{ secrets.LINK_SKILLS }}        # пост/страница "Что умеет"
      LINK_PRICES:    ${{ secrets.LINK_PRICES }}        # пост/страница "Цены"
      LINK_FEEDBACK:  ${{ secrets.LINK_FEEDBACK }}      # пост/страница "Отзывы"
      LINK_ORDER:     ${{ secrets.LINK_ORDER }}         # CTA, напр. https://t.me/Ka_terina8

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # НИЧЕГО не устанавливаем из npm — скрипт без зависимостей

      - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0          # нужно для git push назад в репозиторий

    - name: Run cron poster
      run: node scripts/cron_poster.js

    # --- проверяем, изменился ли sent.json
    - name: Detect changes in sent.json
      id: changes
      run: |
        if git diff --quiet -- sent.json; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    # --- коммитим только если файл реально изменился
    - name: Commit sent.json
      if: steps.changes.outputs.changed == 'true'
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        BRANCH="$(git rev-parse --abbrev-ref HEAD)"
        git add sent.json
        git commit -m "chore: update sent.json (auto poster)"
        git pull --rebase origin "$BRANCH"
        git push origin "$BRANCH"
