name: Telegram Auto Poster

on:
  schedule:
    - cron: "*/5 * * * *" # запуск каждые 5 минут
  workflow_dispatch: # ручной запуск из вкладки Actions

concurrency:
  group: telegram-auto-poster
  cancel-in-progress: true

jobs:
  post:
    runs-on: ubuntu-latest

    # нужно, чтобы пушить sent.json обратно в репозиторий
    permissions:
      contents: write

    # === переменные окружения для scripts/cron_poster.js ===
    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }} # токен бота
      CHANNEL_ID: ${{ secrets.CHANNEL_ID }} # -100XXXXXXXXXX (ID канала)
      OWNER_ID: ${{ secrets.OWNER_ID }} # ваш user_id для уведомлений
      TZ: ${{ secrets.TZ }} # например: Europe/Kaliningrad
      WINDOW_MIN: ${{ secrets.WINDOW_MIN }} # окно поиска, мин (например 30)
      REPORT_HOUR: '21' # час суток для вечернего отчёта

      # опционально (можно удалить, если не используете)
      KEEPALIVE_URL: ${{ secrets.KEEPALIVE_URL }}
      LINK_SKILLS: ${{ secrets.LINK_SKILLS }}
      LINK_PRICES: ${{ secrets.LINK_PRICES }}
      LINK_FEEDBACK: ${{ secrets.LINK_FEEDBACK }}
      LINK_ORDER: ${{ secrets.LINK_ORDER }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # важно для pull/push

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Run cron poster
        run: node scripts/cron_poster.js

      # --- ОБЯЗАТЕЛЬНЫЙ БЛОК: коммитим sent.json ПОСЛЕ запуска скрипта ---
      - name: Commit & push sent.json (robust)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          BRANCH="$(git rev-parse --abbrev-ref HEAD)"
          git add sent.json || true
          git commit -m "chore: update sent.json (auto poster)" || echo "Nothing to commit"
          git pull --rebase origin "$BRANCH" || true
          git push origin "$BRANCH" || echo "Nothing to push"
